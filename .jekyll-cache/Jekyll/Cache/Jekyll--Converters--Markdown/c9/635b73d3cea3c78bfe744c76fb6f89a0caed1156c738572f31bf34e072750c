I"w<p>CSS introduced the property <code class="highlighter-rouge">position: sticky</code> in 2012, one obvious application of this is for making sticky headers.</p>

<p>The idea is straightforward: If an element has <code class="highlighter-rouge">position: sticky</code>, treat it as a normal <code class="highlighter-rouge">position: relative</code> block, as long as it‚Äôs on screen. If the user scrolls far enough that the element (let‚Äôs say it‚Äôs a <code class="highlighter-rouge">h1</code>) would be scrolled off the screen, but the <code class="highlighter-rouge">h1</code>‚Äôs parent div is still visible onscreen, treat it as though it were <code class="highlighter-rouge">position: fixed</code> with whatever position you specify it with through: <code class="highlighter-rouge">top</code>, <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">bottom</code>.</p>

<p>The problem was that adoption of this property was slow by some browser vendors, but that has changed eventually, so we can embrace it now!</p>

<h1 id="so-how-do-you-make-sticky-headers-with-just-css">So, how do you make sticky headers with just css?</h1>

<p>It‚Äôs super-easy. All you do is add</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">position</span><span class="o">:</span> <span class="nt">-webkit-sticky</span><span class="o">;</span>
<span class="nt">position</span><span class="o">:</span> <span class="nt">-moz-sticky</span><span class="o">;</span>
<span class="nt">position</span><span class="o">:</span> <span class="nt">-ms-sticky</span><span class="o">;</span>
<span class="nt">position</span><span class="o">:</span> <span class="nt">-o-sticky</span><span class="o">;</span>
<span class="nt">position</span><span class="o">:</span> <span class="nt">sticky</span><span class="o">;</span>
<span class="nt">top</span><span class="o">:</span> <span class="nt">0</span><span class="o">;</span>
</code></pre></div></div>
<p>and that element will stay on top always.</p>

<h1 id="tables">Tables</h1>

<p>One of the best use-cases for this is with really long tables. That is, tables where you want to see the column headers on top as you scroll down.</p>

<p>There is one caveat though, Chrome and Edge have a bug with using <code class="highlighter-rouge">position: sticky</code> on <code class="highlighter-rouge">thead</code>. So, the way around this is to apply it to <code class="highlighter-rouge">th</code> instead.</p>

<p data-height="265" data-theme-id="0" data-slug-hash="MBvLLZ" data-default-tab="result" data-user="robjoeol" data-pen-title="Table Sticky Header using position:sticky;" class="codepen">See the Pen <a href="https://codepen.io/robjoeol/pen/MBvLLZ/">Table Sticky Header using position:sticky;</a> by rob (<a href="https://codepen.io/robjoeol">@robjoeol</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<script async="" src="https://static.codepen.io/assets/embed/ei.js"></script>

<p>You can also use it to make sticky headers on the side and top for easy cross-referencing!  So it kind of mimics frozen rows in Excel!</p>

<p data-height="417" data-theme-id="0" data-slug-hash="KBQbNG" data-default-tab="result" data-user="robjoeol" data-pen-title="Cell Zoom üîç" class="codepen">See the Pen <a href="https://codepen.io/robjoeol/pen/KBQbNG/">Cell Zoom üîç</a> by rob (<a href="https://codepen.io/robjoeol">@robjoeol</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<script async="" src="https://static.codepen.io/assets/embed/ei.js"></script>

<h1 id="browser-support">Browser Support</h1>

<p>As long as you avoid using it on <code class="highlighter-rouge">thead</code>, you are good on the 4 major desktop browsers. IE be damned!</p>

<p><a href="https://caniuse.com/#feat=css-sticky"><img src="/assets/img/blog/2018-07-31-sticky-headers/caniuse.png" alt="browser support" /></a></p>
:ET