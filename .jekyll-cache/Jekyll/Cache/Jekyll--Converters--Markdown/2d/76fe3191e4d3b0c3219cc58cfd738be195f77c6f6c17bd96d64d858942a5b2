I"§!<p>An Enumeration is a list of closely related constants. You might use an enumeration for situations like:</p>
<ul>
  <li>cardinal directions - north, south, east, west</li>
  <li>types of novels - mystery, classic, fantasy, romance, science-fiction.</li>
  <li>flavours of ice cream - chocolate, vanilla, raspberry, maple.</li>
  <li>suits for playing cards - spades, clubs, diamonds, hearts.</li>
  <li>chess pieces - pawn, rook, knight, bishop, queen, king.</li>
  <li>status flag - open, development, test, closed.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">enum</span> <span class="nc">Direction</span> <span class="o">{</span>
    <span class="no">NORTH</span><span class="o">,</span>
    <span class="no">SOUTH</span><span class="o">,</span>
    <span class="no">EAST</span><span class="o">,</span>
    <span class="no">WEST</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p>We define an enumeration using the <code class="highlighter-rouge">enum</code> keyword, and make a list of constant values. We can then refer to a value by the <em>‚Äúenum.value‚Äù</em> such as <code class="highlighter-rouge">Direction.NORTH</code>.</p>

<h1 id="why-should-i-use-them">Why should I use them?</h1>
<p>It enables you to restrict the values that you can set for a variable. They are type-safe, so it increases compile-time checking and helps to avoid errors from passing in invalid values.</p>

<p>It serves as a clearer way to document what are the legal values for a type.</p>

<h1 id="the-facts">The Facts</h1>
<ul>
  <li>enums are implicitly final subclasses of <code class="highlighter-rouge">java.lang.Enum</code>.</li>
  <li>if an enum is a member of a class, it is implicitly <code class="highlighter-rouge">static</code>.</li>
  <li>enums can contain constructors, methods, variables, and constant class bodies.</li>
  <li><code class="highlighter-rouge">toString()</code> may be overridden to provide any content, if desired.</li>
  <li>for enum constants, <code class="highlighter-rouge">equals()</code> and <code class="highlighter-rouge">==</code> amount to the same thing, and can be used interchangeably.</li>
  <li>enum constants are implicitly <code class="highlighter-rouge">public static final</code></li>
  <li><code class="highlighter-rouge">ordinal()</code> returns the ordinal position of the enum, the same as an array position.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Direction</span> <span class="n">d1</span> <span class="o">=</span> <span class="nc">Direction</span><span class="o">.</span><span class="na">SOUTH</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d1</span><span class="o">.</span><span class="na">ordinal</span><span class="o">());</span>	<span class="c1">//prints: 1 (it's the second constant defined)</span>
</code></pre></div>    </div>
  </li>
  <li><code class="highlighter-rouge">valueOf()</code> can be used to parse a String (case-sensitive) to an enum type.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Direction</span> <span class="n">d</span> <span class="o">=</span> <span class="nc">Enum</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="nc">Direction</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="s">"NORTH"</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//prints: NORTH</span>
</code></pre></div>    </div>
  </li>
  <li>the order of appearance of enum constants is called their ‚Äúnatural order‚Äù, and defines the order used by other items as well : <code class="highlighter-rouge">compareTo()</code>, iteration order of values , <code class="highlighter-rouge">EnumSet</code>, <code class="highlighter-rouge">EnumSet.range</code>.</li>
</ul>

<h1 id="constructors">Constructors</h1>

<p>Constructors for an enum type should be declared as <code class="highlighter-rouge">private</code>. The compiler allows constructors to be declared as public, but this can seem misleading, since new can never be used with enum types!</p>

<p>Here we pass a value to each constant to set the value for <em>ounces</em> for each <em>CoffeeSize</em> through the constructor.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">enum</span> <span class="nc">CoffeeSize</span> <span class="o">{</span>
  <span class="no">BIG</span><span class="o">(</span><span class="mi">8</span><span class="o">),</span>
  <span class="no">HUGE</span><span class="o">(</span><span class="mi">10</span><span class="o">),</span>
  <span class="no">OVERWHELMING</span><span class="o">(</span><span class="mi">16</span><span class="o">);</span>

  <span class="kd">private</span> <span class="kt">int</span> <span class="n">ounces</span><span class="o">;</span>

  <span class="c1">//constructor</span>
  <span class="nc">CoffeeSize</span><span class="o">(</span><span class="kt">int</span> <span class="n">ounces</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">ounces</span> <span class="o">=</span> <span class="n">ounces</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getOunces</span><span class="o">(){</span>
    <span class="k">return</span> <span class="n">ounces</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h1 id="rules">Rules</h1>
<ul>
  <li>An enum can be declared outside or inside a class; but NOT in a method.</li>
  <li>the constants must be the first statement.</li>
  <li>An enum that is NOT enclosed in a class can be declared with only the public or default modifier.</li>
  <li><code class="highlighter-rouge">new</code> can never be used with an enum.</li>
  <li>A constant specific class body can redefine a method for that constant, it overrides the method defined in the enum.</li>
  <li>If an enum is used in a case statement, they should NOT use the class prefix. Everywhere else they should have prefix (e.g. <code class="highlighter-rouge">CoffeeSize.BIG</code>), unless the enum is in the same class:
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">CoffeeSize</span> <span class="n">c</span> <span class="o">=</span> <span class="nc">CoffeeSize</span><span class="o">.</span><span class="na">OVERWHELMING</span><span class="o">;</span>
<span class="k">switch</span> <span class="o">(</span><span class="n">c</span><span class="o">){</span>
<span class="k">case</span> <span class="nc">CoffeeSize</span><span class="o">.</span><span class="na">BIG</span><span class="o">:</span> <span class="c1">//compiler error</span>
  <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"im big"</span><span class="o">);</span>
<span class="k">case</span> <span class="nl">HUGE:</span>
  <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"im huge"</span><span class="o">);</span>
<span class="k">case</span> <span class="nl">OVERWHELMING:</span>
  <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"im overwhelming"</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<h1 id="additional-reading">Additional Reading</h1>
<ul>
  <li><a href="https://crunchify.com/why-and-for-what-should-i-use-enum-java-enum-examples/">Beginner‚Äôs Guide to Java eNum ‚Äì Why and for What should I use Enum? Java Enum Examples</a></li>
  <li><a href="https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html">Oracle Tutorial - Enum Types</a></li>
</ul>
:ET